package com.github.mrbean355.test

@VariantKontrolDsl
class BuildTypeFlavorConfig {
    var debug: Boolean = false
    var release: Boolean = false
}

fun <T> configureToggles(configure: FeatureTogglesScope<T>.() -> Unit): Set<T> {
    return FeatureTogglesScopeImpl<T>().apply(configure).enabledToggles.toSet()
}

interface FeatureTogglesScope<T> {
    fun T.configure(config: BuildTypeFlavorConfig.() -> Unit)
}

private const val activeBuildType = com.github.mrbean355.config.BuildConfig.BUILD_TYPE

@DslMarker
annotation class VariantKontrolDsl

private class FeatureTogglesScopeImpl<T> : FeatureTogglesScope<T> {
    val enabledToggles = mutableSetOf<T>()

    override fun T.configure(config: BuildTypeFlavorConfig.() -> Unit) {
        val buildType = BuildTypeFlavorConfig().apply(config)
        val enabled = when (activeBuildType) {
            "debug" -> buildType.debug
            "release" -> buildType.release
            else -> error("Unexpected build type: $activeBuildType")
        }
        if (enabled) enabledToggles += this
    }
}
